name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'


jobs:

  test:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Docker Login
        run: docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Test Docker Image
        run: docker build -t test-image --target run-stage .

      - name: Lint Code in Container
        run: docker run test-image yarn lint

      - name: Test Code in Container
        run: docker run test-image yarn test:unit

      - name: Docker Logout
        run: docker logout


  tar:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/')
    env:
      APP: corteza-webapp-compose
    needs:
      - test
    steps:

      - name: Set ENV Variables
        run: |
          BRANCH_ESCAPED_NAME=$( echo ${GITHUB_REF} | sed 's/refs\/heads\///g' | sed 's/\//-/g' )
          echo "APP_NAME_WITH_SHA=${{ env.APP }}-${GITHUB_SHA}" >> $GITHUB_ENV
          echo "APP_NAME_WITH_BRANCH=${{ env.APP }}-${BRANCH_ESCAPED_NAME}" >> $GITHUB_ENV
          echo "APP_ARTIFACT_NAME_WITH_SHA=${{ env.APP }}-${GITHUB_SHA}.tar.gz" >> $GITHUB_ENV
          echo "APP_ARTIFACT_NAME_WITH_BRANCH=${{ env.APP }}-${BRANCH_ESCAPED_NAME}.tar.gz" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Docker Login
        run: docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t build-image --target build-stage .

      - name: Create Artifacts
        run: |
          CONTAINER=$(docker create build-image)
          docker cp ${CONTAINER}:/app/dist ${{ env.APP_NAME_WITH_SHA }}
          docker cp ${CONTAINER}:/app/dist ${{ env.APP_NAME_WITH_BRANCH }}
          cp CONTRIBUTING.* DCO LICENSE README.* ${{ env.APP_NAME_WITH_SHA }}
          cp CONTRIBUTING.* DCO LICENSE README.* ${{ env.APP_NAME_WITH_BRANCH }}
          tar -czvf ${{ env.APP_ARTIFACT_NAME_WITH_SHA }} ${{ env.APP_NAME_WITH_SHA }}
          tar -czvf ${{ env.APP_ARTIFACT_NAME_WITH_BRANCH }} ${{ env.APP_NAME_WITH_BRANCH }}

      - name: Upload Arfifacts
        run: |
          docker run -v $(pwd):/root/volume \
                     mcr.microsoft.com/azure-cli az storage blob upload \
                        --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" \
                        --container-name ${{ env.APP }} \
                        --file /root/volume/${{ env.APP_ARTIFACT_NAME_WITH_SHA }} \
                        --name ${{ env.APP_ARTIFACT_NAME_WITH_SHA }}

          docker run -v $(pwd):/root/volume \
                     mcr.microsoft.com/azure-cli az storage blob upload \
                        --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" \
                        --container-name ${{ env.APP }} \
                        --file /root/volume/${{ env.APP_ARTIFACT_NAME_WITH_BRANCH }} \
                        --name ${{ env.APP_ARTIFACT_NAME_WITH_BRANCH }}

      - name: Docker Logout
        run: docker logout


  docker:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/')
    env:
      REGISTRY: corteza.azurecr.io
      REPOSITORY: corteza-webapp-compose
    needs:
      - test
    steps:

      - name: Set ENV Variables
        run: |
          BRANCH_ESCAPED_NAME=$( echo ${GITHUB_REF} | sed 's/refs\/heads\///g' | sed 's/\//-/g' )
          echo "IMAGE_NAME_WITH_SHA=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${GITHUB_SHA}" >> $GITHUB_ENV
          echo "IMAGE_NAME_WITH_BRANCH=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:$BRANCH_ESCAPED_NAME" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Docker Login
        run: docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Images
        run: docker build -t ${{ env.IMAGE_NAME_WITH_SHA }} -t ${{ env.IMAGE_NAME_WITH_BRANCH }} .

      - name: ACR Login
        run: |
          docker login ${{ env.REGISTRY }} --username ${{ secrets.AZURE_ACR_USERNAME }} \
                                           --password "${{ secrets.AZURE_ACR_PASSWORD }}"

      - name: Push Docker Images
        run: |
          docker push ${{ env.IMAGE_NAME_WITH_SHA }}
          docker push ${{ env.IMAGE_NAME_WITH_BRANCH }}

      - name: Docker Logout
        run: docker logout
