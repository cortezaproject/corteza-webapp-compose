{
  "navigation": {
    "module": "Modules",
    "page": "Pages",
    "chart": "Charts",
    "automation": "Automation",
    "configuration": "Configuration",
    "adminPanel": "Admin panel",
    "more": "More"
  },

  "block": {
    "general": {
      "title": "Add new block",
      "changeBlock": "Change existing block",
      "titleLabel": "$t(general.label.title)",
      "titlePlaceholder": "Block title",
      "descriptionLabel": "$t(general.label.description)",
      "descriptionPlaceholder": "Block description",
      "previewHeader": "Preview of your header",
      "headerStyle": "Header style",
      "style": {
        "default": "White with dark text - default",
        "redLight": "Red with white text",
        "redDark": "Red with dark text",
        "greenLight": "Green with white text",
        "greenDark": "Green with dark text",
        "blueLight": "Blue with white text",
        "blueDark": "Blue with dark text",
        "greyLight": "Grey with white text",
        "greyDark": "Grey with dark text",
        "yellowDark": "Yellow with dark text"
      }
    },
    "file": {
      "label": "File",
      "preview": {
        "label": "File block"
      }
    },
    "calendar": {
      "label": "Calendar",
      "calendarHeader": "Calendar header",
      "hideHeader": "Hide calendar header",
      "hideNavigation": "Hide prev/next button",
      "hideToday": "Hide today button",
      "hideTitle": "Hide title text",
      "eventsSource": "Configure events source",
      "noModule": "(No module)",
      "noField": "(No field)",
      "noFieldOneHour": "(No field, event will last 1 hour)",
      "eventStart": "Event start",
      "eventEnd": "Event end",
      "eventAllDay": "Show as all-day-events",
      "addEventsSource": "Add events source",
      "view": {
        "enabled": "Enabled views",
        "default": "Default view",
        "footnote": "Make sure default is one of the available views",
        "month": "Month",
        "agendaMonth": "Month agenda",
        "agendaWeek": "Week agenda",
        "agendaDay": "Day agenda",
        "listMonth": "Month list",
        "listWeek": "Week list",
        "listDay": "Day list"
      }
    },
    "automation": {
      "label": "Automation",
      "trigger": "Trigger",
      "manualTrigger": "Manual triggers",
      "pickTrigger": "Pick a trigger",
      "triggerFootnote": "Select from the list of manual triggers. Disabled and incompatible (different module) triggers are disabled.",
      "button": "Buttons",
      "blueButton": "Blue button",
      "whiteButton": "White button",
      "greenButton": "Green button",
      "redButton": "Red button",
      "greyButton": "Grey button",
      "buttonFootnote": "A list of manual triggers, accessible via click on a button (rename and reorder as you see fit)"
    },
    "recordList": {
      "label": "Record list",
      "module": "Module",
      "modulePick": "Pick a module",
      "moduleFootnote": "Disabled modules on the list do not have {{0}} available.",
      "recordPages": "record pages",
      "addRecord": "Add new record",
      "pagination": "Showing {from} to {to} of {count} records|{count} records|One record",
      "record": {
        "newLabel": "New records",
        "hideAddButton": "Hide add record button",
        "prefilterLabel": "Prefilter records",
        "prefilterPlaceholder": "field1 = 1 AND field2 = 232",
        "prefilterFootnote": "Simplified SQL condition (WHERE ...) syntax is supported. Variables like {{0}}, {{1}} and {{2}} are evaluated (when available)",
        "prefilterHideSearch": "Hide search box",
        "presortLabel": "Presort records",
        "presortPlaceholder": "field1 DESC, field2 ASC",
        "presortFootnote": "Simplified SQL condition (ORDER BY ...) syntax is supported.",
        "presortHideSort": "Hide sorting",
        "perPage": "Records per page",
        "hidePaging": "Hide paging"
      },
      "preview": {
        "recordFromModule": "Showing records from {{0}} module with columns: {{1}}",
        "isHidden": "{{0}} is hidden.",
        "isShown": "{{0}} is shown",
        "isDisabled": "{{0}} is disabled.",
        "isEnabled": "{{0}} is enabled.",
        "bePaged": "{{0}} be paged.",
        "addRecordButton": "Add record button",
        "usersSee": "Users see {{0}}.",
        "searchInput": "Search inputbox",
        "usersSearchThrough": "Users search through the records.",
        "resultsPrefiltered": "Results are prefiltered:",
        "tableHeader": "Table header",
        "sorting": "Sorting",
        "withPresortedRecords": "with presorted ({{0}}) records.",
        "resultsCant": "Results can not",
        "resultsCan": "Results can",
        "recordsPerPage": "{{0}} records are shown per page.",
        "moduleNotSelected": "Block with table of records, module not selected."
      }
    },
    "record": {
      "label": "Record",
      "deleteRecord": "Delete record",
      "confirmDelete": "Are you sure you want to delete this record?",
      "preview": {
        "fieldsFromModule": "Single record block, displaying fields ({{0}}) from module {{1}}",
        "blockNoRecord": "Can not render this block without a record",
        "untitled": "Untitled"
      }
    },
    "socialFeed": {
      "label": "Social media feed",
      "twitterProfileField": "Field that contains Twitter Profile URL for a record",
      "twitterProfileLabel": "Twitter Profile URL for list pages i.e (https://twitter.com/bloomberg)",
      "noInput": "No input for displaying social feed...",
      "preview": {
        "socialFeed": "Social feed"
      }
    },
    "chart": {
      "label": "Chart",
      "display": "Chart to display inside this block:",
      "pick": "Pick a chart",
      "preview": {
        "chartId": "Chart preview (ID {{0}})"
      }
    },
    "content": {
      "label": "Content"
    }
  },

  "module": {
    "title": "List of modules",
    "newLabel": "Create a new module:",
    "newPlaceholder": "$t(general.label.moduleName)",
    "recordPage": "Record page for module",
    "edit": {
      "title": "Edit module",
      "manageRecordFields": "Manage record fields",
      "moduleFieldSettings": "Module field settings",
      "newField": "Add new field",
      "systemFields": "System fields:",
      "reorderFields": "Reorder fields",
      "tooltip": {
        "name": "Must be a-z/A-Z, 0-9 or underscore",
        "title": "The name displayed in form input / data lists",
        "required": "Required field",
        "sensitive": "Sensitive data",
        "dragAndDrop": "Drag and drop to change order"
      }
    },
    "recordGenerator": {
      "notUsable": "Can not use generator, no faker lib.",
      "forModule": "Record generator for",
      "howManyRecords": "How many fake ecords do you want to create?",
      "generate": "Generate!",
      "sampleRoll": "Sample {{0}}",
      "rollTheDice": "roll the dice"
    }
  },

  "page": {
    "title": "List of pages",
    "visible": "Visible",
    "recordPage": "Record page",
    "newLabel": "Create a new page:",
    "newPlaceholder": "Page title",
    "noBlock": "No block added yet",
    "edit": {
      "title": "Edit page",
      "pageDescription": "Page description",
      "visible": "Page visible"
    },
    "build": {
      "addBlock": "Add block",
      "selectBlockTitle": "Select type of the new block",
      "selectBlockFootnote": "Some types might be disabled for non-record pages"
    }
  },

  "chart": {
    "title": "List of charts",
    "newLabel": "Create a new chart:",
    "newPlaceholder": "Chart name",

    "edit": {
      "title": "Chart builder",
      "modulePick": "Pick a module",
      "loadData": "Load data",

      "filter": {
        "label": "Filters",
        "noFilter": "(no filter)",
        "recordsCreatedThisYear": "Records created this year",
        "recordsCreatedLastYear": "Records created last year",
        "recordsCreatedThisQuarter": "Records created this quarter",
        "recordsCreatedLastQuarter": "Records created last quarter",
        "recordsCreatedThisMonth": "Records created this month",
        "recordsCreatedLastMonth": "Records created last month",
        "customize": "Customize filter"
      },

      "dimension": {
        "label": "Dimensions (datetime & select fields)",
        "fieldLabel": "Field",
        "fieldPlaceholder": "Select a dimension field",
        "skipMissingValues": "Skip missing values",
        "defaultValueLabel": "Default value",
        "defaultValueFootnote": "Use this value for missing dimension values",
        "calculateLabelCount": "Calculate how many labels can be shown",
        "function": {
          "label": "Function",
          "placeholder": "Select dimension modifier (bucket size)",
          "none": "(no grouping / buckets)",
          "date": "DATE",
          "week": "WEEK",
          "month": "MONTH",
          "quarter": "QUARTER",
          "year": "YEAR"
        }
      },

      "metric": {
        "label": "Metrics (numeric fields)",
        "labelLabel": "Label",
        "labelPlaceholder": "Total",
        "fieldLabel": "Field",
        "fieldPlaceholder": "Select metric field",
        "logarithmicScale": "Logarithmic scale",
        "axisOnRight": "Place axis on the right side",
        "axisScaleFromZero": "Always begin axis scale at zero",
        "fillArea": "Fill area below the line",
        "add": "Add metric",
        "function": {
          "label": "Function",
          "placeholder": "Select metric aggregate function",
          "countd": "COUNTD",
          "sum": "SUM",
          "max": "MAX",
          "min": "MIN",
          "avg": "AVG",
          "std": "STD"
        },
        "output": {
          "label": "Output",
          "placeholder": "Select metric output",
          "line": "Line",
          "bar": "Bar"
        }
      }
    }
  },
  "automation": {
    "title": "List of triggers",
    "newLabel": "Create a new trigger",
    "newPlaceholder": "Trigger name",
    "status": {
      "true": "Enabled",
      "false": "Disabled"
    },
    "edit": {
      "title": "Automation",
      "nameLabel": "Name",
      "namePlaceholder": "Automation name",
      "enabled": "$t(automation.status.true)",

      "primaryModule": {
        "label": "Primary module",
        "none": "(no primary module)"
      },

      "loadExampleConversion": "Load conversion example",
      "reset": "Reset",

      "codeLabel": "Code",
      "code": {
        "label": "Code",
        "comment1": "Crust automation triggers will help you manage your CRM records",
        "comment2": "It is a simple JavaScript engine that runs custom code that triggers manually",
        "comment3": "or automatically before/after certain record events (create, update, delete)"
      }
    },
    "triggerCondition": {
      "label": "Actions that trigger the automation...",
      "manual": "manually, when user clicks a button on a page",
      "beforeCreate": "before record is created",
      "afterCreate": "after record is created",
      "beforeUpdate": "before record is updated",
      "afterUpdate": "after record is updated",
      "beforeDelete": "before record is deleted",
      "afterDelete": "after record is deleted"
    },
    "testing": {
      "label": "Testing trigger",
      "recordID": "Record ID",
      "run": "Run test",
      "footnotePrimaryModule": "When trigger has primary module selected, record ID is needed for tests to run properly.",
      "footnoteRecordChanges": "Changes to records are ignored if not explicity saved (through crust.api.record.save/delete)"
    },
    "manual": [
      "## Record Automation Manual",
      "### Trigger logic and behaviour",
      "#### \"Manual\" triggers",
      "An enabled automation rule with \"manually, when user clicks a button on a page\" checked can be inserted as a button in an \"automation block\" on a page. If the page type is a \"record page\", the primary module of the automation rule must match the module of the record page.",
      "___",
      "#### \"Before\" triggers",
      "An enabled automation rule with \"before record is created\", \"before record is updated\" or \"before record is deleted\" checked, can prevent the creation, update or deletion of the record.",
      "",
      "If an error/exception (`throw new Exception('Some error')`) or *non true* value is returned (`return false`), the following action is canceled and the record is not created, updated or deleted.",
      "___",
      "#### \"After\" triggers",
      "An enabled automation rule with \"after record is created\", \"after record is updated\" or \"after record is deleted\" checked is executed after a successful creation, update or deletion.",
      "",
      "In case of creation or update, the new data of the record can be accessed in the automation code, but on deletion will return record data from before deletion.",
      "___",
      "#### Order of execution",
      "1\\. Enabled automation rules with \"Before\" triggers",
      "",
      "2\\. Enabled automation rules with \"After\" triggers",
      "* Enabled automation rules with a primary module are only executed when the module detects a record creation, update or deletion.",
      "* Enabled automation rules without primary module are executed whenever there is any record creation, update or deletion.",
      "* When there are multiple enabled automation rules that match at the same time (for example, two automation rules with \"after update\" triggers with the same primary module), the order of execution cannot be guaranteed. Errors that occur in a specific automation rule do not affect other automation rules that match.",
      "* Enabled automation rules with \"Manual\" trigger are only executed manually by users."
    ]
  },

  "general": {
    "label": {
      "openBookmarks": "Open bookmarks",
      "buttons": "Buttons",
      "name": "Name",
      "actions": "Actions",
      "status": "Status",
      "title": "Title",
      "description": "Description",
      "type": "Type",
      "required": "Required",
      "sensitive": "Sensitive",
      "updatedAt": "$t(field.system.updatedAt)",
      "pageBuilder": "Page builder",
      "moduleName": "Module name",
      "search": "Search",
      "create": "Create",
      "edit": "Edit",
      "save": "Save",
      "saveAndClose": "Save and close",
      "saveAndPreview": "Save and Preview",
      "add": "Add",
      "addNew": "Add new",
      "close": "Close",
      "delete": "Delete",
      "back": "Back",
      "backWithoutSave": "Back (without saving changes)",
      "dropFiles": "Click or drop files here to upload",
      "loading": "Loading",
      "uploading": "Uploading",
      "download": "Download",
      "uploadProgress": "(File size: {{0}}, uploaded {{1}})",
      "yes": "Yes",
      "no": "No",
      "view": "View"
    }
  },

  "permission": {
    "saveChanges": "Save changes",
    "resetBack": "Reset back to \"{{current}}\"",
    "setFor": "Set permissions for {{target}}",
    "all": {
      "module": "All modules",
      "page": "All pages",
      "trigger": "All triggers",
      "chart": "All charts"
    },

    "compose-page": {
      "read": {
        "title": "Read any page",
        "specific": "Read {{target}}",
        "description": "Default: deny"
      },
      "update": {
        "title": "Update any page",
        "specific": "Update {{target}}",
        "description": "Default: deny"
      },
      "delete": {
        "title": "Delete any page",
        "specific": "Delete {{target}}",
        "description": "Default: deny"
      }
    },
    "compose-trigger": {
      "read": {
        "title": "Read any trigger",
        "specific": "Read {{target}}",
        "description": "Default: deny"
      },
      "update": {
        "title": "Update any trigger",
        "specific": "Update {{target}}",
        "description": "Default: deny"
      },
      "delete": {
        "title": "Delete any trigger",
        "specific": "Delete {{target}}",
        "description": "Default: deny"
      }
    },
    "compose-module": {
      "read": {
        "title": "Read any module",
        "specific": "Read {{target}}",
        "description": "Default: deny"
      },
      "update": {
        "title": "Update any module",
        "specific": "Update {{target}}",
        "description": "Default: deny"
      },
      "delete": {
        "title": "Delete any module",
        "specific": "Delete {{target}}",
        "description": "Default: deny"
      },
      "record-create": {
        "title": "Create record under any module",
        "specific": "Create record under {{target}}",
        "description": "Default: deny"
      },
      "record-read": {
        "title": "Read records under any module",
        "specific": "Read record under {{target}}",
        "description": "Default: deny"
      },
      "record-update": {
        "title": "Update records under any module",
        "specific": "Update record under {{target}}",
        "description": "Default: deny"
      },
      "record-delete": {
        "title": "Delete records under any module",
        "specific": "Delete record under {{target}}",
        "description": "Default: deny"
      }
    },
    "compose-chart": {
      "read": {
        "title": "Read any chart",
        "specific": "Read {{target}}",
        "description": "Default: deny"
      },
      "update": {
        "title": "Update any chart",
        "specific": "Update {{target}}",
        "description": "Default: deny"
      },
      "delete": {
        "title": "Delete any chart",
        "specific": "Delete {{target}}",
        "description": "Default: deny"
      }
    }
  },

  "field": {
    "system": {
      "ownedBy": "Owned by",
      "createdBy": "Created by",
      "createdAt": "Created at",
      "updatedBy": "Updated by",
      "updatedAt": "Updated at",
      "deletedBy": "Deleted by",
      "deletedAt": "Deleted at"
    },
    "kind": {
      "bool": {
        "label": "Checkbox (Y/N)",
        "checkedValueLabel": "Value when checked",
        "checkedValuePlaceholder": "Checked value",
        "uncheckedValueLabel": "Value when unchecked",
        "uncheckedValuePlaceholder": "Unchecked value"
      },
      "dateTime": {
        "label": "Date and time",
        "dateOnly": "Date Only",
        "timeOnly": "Time Only",
        "pastValuesOnly": "Past Values Only",
        "futureValuesOnly": "Future Value Only",
        "relativeOutput": "Output Relative value (eg: 3 days ago)",
        "outputFormat": "Output format:",
        "outputFormatFootnote": "See {{0}} for formatting options",

        "warning": {
          "pastValuesOnly": "Only dates in the future will be saved!",
          "futureValuesOnly": "Only dates in the past will be saved!"
        }
      },
      "email": {
        "label": "Email",
        "preventToLink": "Don't turn email into a link"
      },
      "select": {
        "label": "Select",
        "optionsLabel": "Options to select from",
        "optionRemove": "Remove",
        "optionAdd": "Add",
        "optionPlaceholder": "Add more"
      },
      "number": {
        "label": "Number",
        "prefixLabel": "Prefix",
        "prefixPlaceholder": "Prefix",
        "suffixLabel": "Suffix",
        "suffixPlaceholder": "Suffix",
        "precisionLabel": "Precision",
        "precisionPlaceholder": "Precision",
        "formatLabel": "Format",
        "formatPlaceholder": "Format",
        "examplesLabel": "Format examples:",
        "exampleInput": "Input",
        "exampleFormat": "Format",
        "exampleResult": "Result"
      },
      "record": {
        "label": "Record",
        "moduleLabel": "Module name",
        "modulePlaceholder": "Pick module",
        "recordFieldLabel": "Record label from field",
        "recordFieldPlaceholder": "Pick field",
        "queryFieldsLabel": "Query fields on search",

        "suggestionPlaceholder": "Start typing to search for records"
      },
      "string": {
        "label": "String",
        "multiLine": "Multi line",
        "richText": "Use Rich Text Editor"
      },
      "url": {
        "label": "URL",
        "trimHash": "Trim '#' from the Url",
        "trimQuestionMark": "Trim '?' from the Url",
        "trimToDomain": "Trim Url down to domain only",
        "sshOnly": "Only allow SSL (https) Url",
        "preventToLink": "Don't turn Url into a link"
      },
      "user": {
        "label": "User",
        "presetWithCurrentUser": "Preset with current user",

        "suggestionPlaceholder": "Start typing to search for users by email or name",

        "na": "N/A"
      },
      "file": {
        "label": "File",
        "view": {
          "modeLabel": "View mode",
          "modeFootnote": "How files are represented in record page blocks",
          "list": "List",
          "grid": "Grid",
          "single": "Single image",
          "gallery": "Gallery of images"
        }
      }
    },
    "selector": {
      "available": "Columns available",
      "selected": "Columns selected",
      "selectAll": "Select all",
      "unselectAll": "Unselect all",
      "systemField": "(system field)",
      "footnote": "Add fields by dragging or double-clicking on them. Selected fields can also be reordered"
    }
  },

  "notification": {
    "general": {
      "crmAccessNotAllowed": "Not allowed to access Crust CRM"
    },
    "field": {
      "unsupportedKind": "Unsupported field kind {{kind}}",
      "missingRequired": "Missing value on required field",
      "unknownFieldKind": "Error: Unknown field kind \"{{kind}}\", no viewer component found."
    },
    "page": {
      "pageMoveFailed": "Could not move this page",
      "createFailed": "Could not create a page",
      "loadFailed": "Could not load the page tree",
      "saveFailed": "Could not save this page",
      "deleteFailed": "Could not delete this page",
      "noPages": "No pages found",

      "reordered": "Page reordered",
      "saved": "Page saved"
    },
    "chart": {
      "loadFailed": "Could not load chart",
      "saveFailed": "Could not save this chart",
      "deleteFailed": "Could not delete this chart",
      "createFailed": "Could not create a chart",
      "optionsBuildFailed": "Could not build chart options",
      "unsupportedRenderer": "Unsupported renderer: {{version}}",

      "saved": "Chart saved",
      "deleted": "Chart deleted"
    },
    "record": {
      "listLoadFailed": "Could not load record list",
      "createFailed": "Could not create this record",
      "deleteFailed": "Could not delete this record",
      "loadFailed": "Could not load this record",
      "updateFailed": "Could not update this record",
      "moduleOrPageNotSet": "RecordList block error: module or page option not set",
      "invalidRecordVar": "Can not use ${record...} variable in non-record pages",
      "invalidOwnerVar": "Can not use ${ownerID} variable in non-record pages",
      "moduleNotDefined": "Record module not defined",
      "unexpectedValue": "Unexpected value for record module ({{type}})",
      "unexpectedInput": "Unexpected input for values property, should be an array with name-value object pairs"
    },
    "automation": {
      "saveFailed": "Could not save this trigger",
      "deleteFailed": "Could not delete this trigger",
      "execFailed": "An error occurred while executing the trigger (see browser console for details)",
      "invalidRecordID": "Primary module set, expecting valid recordID",
      "execError": "Trigger failed to execute successfully",
      "expectingRecordObject": "Expecting Record object",
      "expectingModuleObject": "Expecting Module object",
      "recordDoesNotExist": "Record does not exist",

      "saved": "Trigger saved",
      "deleted": "Trigger deleted",
      "executed": "Trigger successfully executed"
    },
    "module": {
      "saveFailed": "Could not save this module",
      "deleteFailed": "Could not delete this module",
      "createFailed": "Could not create a module",

      "saved": "Module saved",
      "deleted": "Module deleted"
    }
  }
}
